{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Exercise 2.1 - Pandas Fundamentals I","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"mQlkWmvx7J9r","colab_type":"text"},"source":["# Data Science for Construction, Architecture and Engineering\n","\n","### Week 2 - Building Design Phase - Intro to Pandas\n","\n","### Exercise Set 2.1 - Pandas Fundamentals I\n","\n","This set of exercises is the first of two sets for Week 2. These exercises are designed to give you some hands on experience in trying out the concepts from the first set of videos for this week.\n","\n","There is an introduction video available to explain the process of using this exercise video.\n","\n","The lead developer of this exercise is Matias Quintana, a Ph.D. student at NUS and a teaching assistant of this course. "]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"8uiuM18n7z_l"},"source":["# Exercise 02.1\n","\n","There are three exercises in this set, each one focused simple uses of the [Pandas library](https://pandas.pydata.org/).\n","\n","### Please note that you will need to use the resultant output from Exercise 02.1.3 for the Quiz 2.1."]},{"cell_type":"markdown","metadata":{"id":"MeE39azs4oct","colab_type":"text"},"source":["## Exercise 02.1.1 - Load the baseline file\n","\n","Electrical powermeter datasets usually contain only one column with the electrical consmption in `KWh`. The [Building Data Genome](https://github.com/buds-lab/the-building-data-genome-project) is an example of such template. However, as you just saw in the lectures, you can also generate these datasets yourself after running simulations. \n","\n","In this exercise, we would do a bit more manipulation when loading files. In some ocasions, we might want to assign the names of the columns ourselves or we want to have a different index for the rows. Luckily, the function `read_csv` has the appropriate parameters to do this.\n","\n","Write some lines of code to load the `Baseline` file **without column indices and without header or column names**. Look at the [documentation](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_csv.html) for `read_csv` and use the appropriate parameters to **not load the first column as index** (e.g., parameter `index_col`) and to **not use the first row as header** (e.g., parameter `header`).\n","\n","Be mindful that the `csv` file _does_ have a row (the very first one) that seems to be a header, but let's practice some coding and **not** use it! This means we would need to `skip` the first row when we are loading the file.\n","\n","As a file step, rename the columns. You can pick any name you want, but as a best practice, a name that best represents the data is always useful (e.g., if the data are `KWh` measurements possible names include Power or Consumption)\n","\n","The needed functions and libraries are already imported below:\n"]},{"cell_type":"code","metadata":{"id":"Z81IM6-FAJIa","colab_type":"code","colab":{}},"source":["import pandas as pd\n","import os\n","from google.colab import drive"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"vs3IjepjATsn","colab_type":"text"},"source":["**Hint**: Remember whenever you want to load files from your Google Drive, you need to `mount` the drive first. The documentation for the Pandas library can be found [here](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_csv.html) and looking through [Stackoverflow](https://stackoverflow.com/questions/11346283/renaming-columns-in-pandas) is always helpful too "]},{"cell_type":"code","metadata":{"id":"C6bGD7LT43dc","colab_type":"code","colab":{}},"source":["# Mount, change directory, and load the file. Remember to go through `read_csv` documentation to properly use the parameters\n","# YOUR CODE HERE\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"8Q-zAbOIUE-1","colab_type":"text"},"source":["## Exercise 02.1.2 - Filter dataframe rows based on a threshold"]},{"cell_type":"markdown","metadata":{"id":"6LiLCmpwUgLC","colab_type":"text"},"source":["The building facilities manager is concerned about the high consumption during certain months of the year and wants you to investigate on the months that didn't consume higher than a certain `consumption_threshold`. \n","\n","Write some lines of code that allows you to filter out the rows where the consumption did not exceed the given `consumption_threshold`. Set `consumption_threshold` equal to 15 initially\n"]},{"cell_type":"code","metadata":{"id":"lDL73czAUFbF","colab_type":"code","colab":{}},"source":["# filter the baseline consumption with the `consumption_threshold` variable\n","consumption_threshold = 15\n","# YOUR CODE HERE\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"HSotamy_4wid","colab_type":"text"},"source":["## Exercise 02.1.3 - Savings ratio calculation\n","One energy analysis application is the analysis of *peak consumption ratios*. Suppose we want to know the ratio between the consumption of the month of March versus the peak consumption of the whole year.\n","\n","In this exercise, let's do this by to finding the *percentage* of March's consumption as compared to the peak consumption value.\n","\n","Calculate your answer as a percentage (0-100) as the variable `percentage`\n","\n","Hint: One way to find the maximum value of a column in a dataframe is to use the function `.max()`, more information about the function can be found [here](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.max.html). "]},{"cell_type":"code","metadata":{"id":"ZiafyX5ufOwR","colab_type":"code","colab":{}},"source":["# Compute the savings for the month of `March`\n","# YOUR CODE HERE\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"vMxIsjsKL-QD","colab_type":"text"},"source":["### Please write down the number that you calculated for the variable `percentage` rounded up to 2 decimal places and input in Quiz 2.1"]},{"cell_type":"code","metadata":{"id":"baAssW3aL-fY","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]}]}